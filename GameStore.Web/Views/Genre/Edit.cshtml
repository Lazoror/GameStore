@model GameStore.Web.ViewModels.Genre.GenreViewModel

@{
    ViewData["Title"] = "Edit";
}

<h2>@Resources.Edit</h2>

<hr />
<div class="row">
    <div class="col-md-4 edit-genre-wrapper">
        <form asp-action="Edit" asp-controller="Genre">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label>@Resources.Name (@Resources.English)</label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label>@Resources.Name (@Resources.Russian)</label>
                <input asp-for="NameRu" class="form-control" />
                <span asp-validation-for="NameRu" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label>@Resources.ParentGenre</label>
                @Html.DropDownList(nameof(Model.ParentGenre), new SelectList(Model.AllGenres), "None",
                    new { @class = "form-control" })
            </div>
            <input type="hidden" name="@nameof(Model.Id)" value="@Model.Id" />
            <div class="form-group">
                <input type="submit" value="@Resources.Change" class="btn btn-dark" />
            </div>
        </form>
    </div>
</div>

<div class="back-link">
    <a asp-action="Index">@Resources.BackToList</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
